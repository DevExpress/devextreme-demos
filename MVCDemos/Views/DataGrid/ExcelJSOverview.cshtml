@using DevExtreme.MVC.Demos.Models.DataGrid
@model IEnumerable<Employee>

@section ExternalDependencies {
    <script src="https://cdnjs.cloudflare.com/ajax/libs/babel-polyfill/7.10.1/polyfill.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/exceljs/3.8.0/exceljs.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/FileSaver.js/2.0.5/FileSaver.min.js"></script>
}

@(Html.DevExtreme().DataGrid<Employee>()
    .ID("gridContainer")
    .DataSource(Model, "ID")
    .Selection(s => s.Mode(SelectionMode.Multiple))
    .Export(e => e.Enabled(true).AllowExportSelectedData(true))
    .ShowBorders(true)
    .GroupPanel(groupPanel => groupPanel.Visible(true))
    .Grouping(grouping => grouping.AutoExpandAll(true))
    .OnExporting("exporting")
    .Columns(columns =>
    {
        columns.AddFor(m => m.FirstName);
        columns.AddFor(m => m.LastName);
        columns.AddFor(m => m.City);

        columns.AddFor(m => m.State)
            .GroupIndex(0);

        columns.AddFor(m => m.Position)
            .Width(130);

        columns.AddFor(m => m.BirthDate)
            .DataType(GridColumnDataType.Date).Width(100);

        columns.AddFor(m => m.HireDate)
            .DataType(GridColumnDataType.Date).Width(100);
    })
)

<script>
    function exporting(e) {
        var workbook = new ExcelJS.Workbook();
        var worksheet = workbook.addWorksheet('Employees');

        DevExpress.excelExporter.exportDataGrid({
            component: e.component,
            worksheet: worksheet,
            autoFilterEnabled: true
        }).then(function () {
            workbook.xlsx.writeBuffer().then(function (buffer) {
                saveAs(new Blob([buffer], { type: 'application/octet-stream' }), 'Employees.xlsx');
            });
        });
        e.cancel = true;
    }
</script>
