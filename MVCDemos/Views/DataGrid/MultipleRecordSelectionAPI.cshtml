@using DevExtreme.MVC.Demos.Models.DataGrid

@model IEnumerable<Employee>

@(Html.DevExtreme().DataGrid<Employee>()
    .ID("grid-container")
    .DataSource(Model, new[] { "ID" })
    .ShowBorders(true)
    .Selection(s => s.Mode(SelectionMode.Multiple))
    .Columns(columns => {
        columns.AddFor(m => m.Prefix)
            .Width(70);

        columns.AddFor(m => m.FirstName);

        columns.AddFor(m => m.LastName);

        columns.AddFor(m => m.Position)
            .Width(180);

        columns.AddFor(m => m.BirthDate)
            .Width(125);

        columns.AddFor(m => m.HireDate)
            .Width(125);
    })
    .OnSelectionChanged("selection_changed")
    .Toolbar(toolbar => {
        toolbar.Items(items => {
            items.Add()
                .Location(ToolbarItemLocation.Before)
                .Widget(w =>
                    w.SelectBox()
                        .DataSource(new[] { "All", "Dr.", "Mr.", "Mrs.", "Ms." })
                        .Placeholder("Select title")
                        .OnValueChanged("selectBox_valueChanged")
                );

            items.Add()
                .Location(ToolbarItemLocation.Before)
                .Widget(w =>
                    w.Button()
                        .Text("Clear Selection")
                        .Disabled(true)
                        .OnClick("button_click")
                );
        });
    })

)
<div class="selected-data">
    <span class="caption">Selected Records:</span>
    <span id="selectedItemsContainer">Nobody has been selected</span>
</div>


<script>
    var changedBySelectBox;

    function getDataGridInstance() {
        return $("#grid-container").dxDataGrid("instance");
    }

    function selection_changed(selectedItems) {
        var dataGrid = getDataGridInstance();
        var data = selectedItems.selectedRowsData;
        if(data.length > 0)
            $("#selectedItemsContainer").text(
            $.map(data, function(value) {
                return value.FirstName + " " + value.LastName;
            }).join(", "));
        else
            $("#selectedItemsContainer").text("Nobody has been selected");
        if (!changedBySelectBox)
            dataGrid.option("toolbar.items[0].options.value", null);

        changedBySelectBox = false;
        dataGrid.option("toolbar.items[1].options.disabled", !data.length);
    }

    function selectBox_valueChanged(data) {
        var dataGrid = getDataGridInstance();
        dataGrid.option('toolbar.items[0].options.value', data.value);

        if(!data.value)
            return;

        changedBySelectBox = true;
        if(data.value == "All") {
            dataGrid.selectAll();
        } else {
            var employeesToSelect = $.map(dataGrid.getDataSource().items(), function(item) {
                if(item.Prefix === data.value) {
                    return item.ID;
                }
            });

            dataGrid.selectRows(employeesToSelect);
        }
    }

    function button_click() {
        getDataGridInstance().clearSelection();
    }
</script>
