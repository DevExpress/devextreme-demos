<div id="data-grid-demo">
    @(Html.DevExtreme().Button()
        .ID("gridDeleteSelected")
        .Text("Delete Selected Records")
        .Height(34)
        .Disabled(true)
        .OnClick("onDeleteBtnClick")
    )

    @(Html.DevExtreme().DataGrid<DevExtreme.MVC.Demos.Models.DataGrid.Employee>()
        .ID("gridContainer")
        .Paging(paging => paging.Enabled(false))
        .ShowBorders(true)
        .Editing(editing => {
            editing.Mode(GridEditMode.Cell);
            editing.AllowUpdating(true);
        })
        .Selection(selection => selection.Mode(SelectionMode.Multiple))
        .OnSelectionChanged("onSelectionChanged")
        .Columns(columns => {
            columns.AddFor(m => m.Prefix)
                .Width(55);

            columns.AddFor(m => m.FirstName);

            columns.AddFor(m => m.LastName);

            columns.AddFor(m => m.Position)
                .Width(170);

            columns.AddFor(m => m.StateID)
                .Width(125)
                .Lookup(lookup => lookup
                    .DataSource(d => d.WebApi().Controller("DataGridStatesLookup").Key("ID"))
                    .DisplayExpr("Name")
                    .ValueExpr("ID")
                );

            columns.AddFor(m => m.BirthDate);
        })
        .DataSource(d => d.WebApi().Controller("DataGridEmployees").UpdateAction(true).DeleteAction(true).Key("ID"))
    )
</div>

<script>
    function onDeleteBtnClick(){
        let dataGrid = $("#gridContainer").dxDataGrid("instance");
        $.when.apply($, dataGrid.getSelectedRowsData().map(function(data) {
            return dataGrid.getDataSource().store().remove(data.ID);
        })).done(function() {
            dataGrid.refresh();
        });
    }

    function onSelectionChanged(data){
        let deleteButton = $("#gridDeleteSelected").dxButton("instance");
        deleteButton.option("disabled", !data.selectedRowsData.length);
    }
</script>
