@model DevExtreme.MVC.Demos.Models.FileManagement.AzureStorageAccount

@if(!Model.IsEmpty()) {
    @(Html.DevExtreme().FileUploader()
        .ID("file-uploader")
        .ChunkSize(200000)
        .MaxFileSize(1048576)
        .UploadChunk("uploadChunk")
    )
    <text>
        <div id="request-panel"></div>
        <script src="~/Scripts/utils/azure.file.system.js"></script>
        <script>
            function uploadChunk(file, uploadInfo) {
                var promise = null;

                if(uploadInfo.chunkIndex === 0) {
                    promise = gateway.getUploadAccessUrl(file.name).then(function(accessUrls) {
                        uploadInfo.customData.accessUrl = accessUrls.url1;
                    });
                } else {
                    promise = Promise.resolve();
                }

                promise = promise.then(function() {
                    return gateway.putBlock(uploadInfo.customData.accessUrl, uploadInfo.chunkIndex, uploadInfo.chunkBlob);
                });

                if(uploadInfo.chunkIndex === uploadInfo.chunkCount - 1) {
                    promise = promise.then(function() {
                        return gateway.putBlockList(uploadInfo.customData.accessUrl, uploadInfo.chunkCount);
                    });
                }

                return promise;
            }

            function onRequestExecuted(e) {
                $("<div>").addClass("request-info").append(
                        createParameterInfoDiv("Method:", e.method),
                        createParameterInfoDiv("Url path:", e.urlPath),
                        createParameterInfoDiv("Query string:", e.queryString),
                        $("<br>")
                    )
                    .prependTo("#request-panel");
            }

            function createParameterInfoDiv(name, value) {
                return $("<div>").addClass("parameter-info").append(
                    $("<div>").addClass("parameter-name").text(name),
                    $("<div>").addClass("parameter-value dx-theme-accent-as-text-color").text(value).attr("title", value)
                );
            }

            var endpointUrl = '@Url.HttpRouteUrl("FileUploaderAzureAccessApi", null)';
            var gateway = new AzureGateway(endpointUrl, onRequestExecuted);
        </script>
    </text>
}
else {
    <text>
        To run the demo locally, specify your Azure storage account name, access key and container name in the web.config file.
        Refer to the <a href="https://js.devexpress.com/Demos/WidgetsGallery/Demo/FileUploader/AzureDirectUploading/Mvc/Light/" target="_blank">
            https://js.devexpress.com/Demos/WidgetsGallery/Demo/FileUploader/AzureDirectUploading/Mvc/Light/
        </a> to see the demo online.
    </text>
}
