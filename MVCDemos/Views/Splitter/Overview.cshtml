<div class="dx-viewport">
    <div class="demo-container">
        @(Html.DevExtreme().Splitter()
            .ID("splitter")
            .Items(items => {
                items.Add()
                    .Resizable(true)
                    .Size("140px")
                    .MinSize("70px")
                    .Template((data) => Html.Raw("<script>paneContentTemplate(data, 'Left Pane');</script>"));

                items.Add().Splitter(s => {
                    s.Orientation(Orientation.Vertical);
                    s.Items(verticalItems => {
                        verticalItems.Add()
                            .Resizable(true)
                            .Collapsible(true)
                            .MaxSize("75%")
                            .Template((data) => Html.Raw("<script>paneContentTemplate(data, 'Central Pane');</script>"));

                        verticalItems.Add()
                            .Collapsible(true)
                            .Splitter(horizontalSplitter => {
                                horizontalSplitter.Orientation(Orientation.Horizontal);
                                horizontalSplitter.Items(horizontalItems => {
                                    horizontalItems.Add()
                                        .Resizable(true)
                                        .Collapsible(true)
                                        .Size("30%")
                                        .MinSize("5%")
                                        .Template((data) => Html.Raw("<script>paneContentTemplate(data, 'Nested Left Pane');</script>"));

                                    horizontalItems.Add()
                                        .Collapsible(false)
                                        .Template((data) => Html.Raw("<script>paneContentTemplate(data, 'Nested Central Pane');</script>"));

                                    horizontalItems.Add()
                                        .Resizable(true)
                                        .Collapsible(true)
                                        .Size("30%")
                                        .MinSize("5%")
                                        .Template((data) => Html.Raw("<script>paneContentTemplate(data, 'Nested Right Pane');</script>"));
                                });
                            });
                    });
                });

                items.Add()
                    .Resizable(false)
                    .Size("140px")
                    .Collapsible(false)
                    .Template((data) => Html.Raw("<script>paneContentTemplate(data, 'Right Pane');</script>"));
            })
        )
    </div>
</div>

<script>
    function getStateText(data) {
        if (data.resizable !== false && !data.collapsible) {
            return 'Resizable only';
        }
        return (data.resizable ? 'Resizable' : 'Non-resizable') + ' and ' + (data.collapsible ? 'collapsible' : 'non-collapsible');
    }

    function paneContentTemplate(data, paneName) {
        var content = "<div class='pane-content'>" +
            "<div class='pane-title'>" + paneName + "</div>" +
            "<div class='pane-state'>" + getStateText(data) + "</div>";

        if (data.size) {
            content += "<div class='pane-option'>size: " + data.size + "</div>";
        }
        if (data.minSize) {
            content += "<div class='pane-option'>minSize: " + data.minSize + "</div>";
        }
        if (data.maxSize) {
            content += "<div class='pane-option'>maxSize: " + data.maxSize + "</div>";
        }

        content += "</div>";

        return content;
    }
</script>
