@(Html.DevExtreme().TreeList<DevExtreme.MVC.Demos.Models.TreeList.Employee>()
    .ID("employees")
    .DataSource(ds => ds.WebApi().Controller("TreeListEmployees").Key("ID"))
    .KeyExpr("ID")
    .ParentIdExpr("HeadID")
    .ShowRowLines(true)
    .ShowBorders(true)
    .Selection(s => s
        .Mode(SelectionMode.Multiple)
        .Recursive(false)
    )
    .Columns(columns => {
        columns.AddFor(m => m.FullName);

        columns.AddFor(m => m.Title);

        columns.AddFor(m => m.City);

        columns.AddFor(m => m.State);

        columns.AddFor(m => m.HireDate)
            .Width(120);
    })
    .ColumnAutoWidth(true)
    .ExpandedRowKeys(new[] { 1, 2, 10 })
    .OnSelectionChanged("selection_changed")
)

<div class="options">
    <div class="caption">Options</div>
    <div class="option">
        @(Html.DevExtreme().CheckBox()
            .Value(false)
            .Text("Recursive Selection")
            .OnValueChanged(@<text>
                function(e) {
                    var treeList = $("#employees").dxTreeList("instance");
                    treeList.clearSelection();
                    treeList.option("selection.recursive", e.value);
                }
            </text>
            )
        )
    </div>
    <div class="selected-data">
        <span class="caption">Selected Records:</span>
        <span id="selectedItemsContainer">Nobody has been selected</span>
    </div>
</div>

<script>
    function selection_changed(e) {
        var data = e.component.getSelectedRowsData("all");
        if(data.length > 0)
            $("#selectedItemsContainer").text(
            $.map(data, function(value) {
                return value.FullName;
            }).join(", "));
        else
            $("#selectedItemsContainer").text("Nobody has been selected");
    }
</script>
