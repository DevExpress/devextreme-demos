@model IEnumerable<DevExtreme.MVC.Demos.Models.DataGrid.Employee>
@using DevExtreme.AspNet.Mvc.Builders;

<div class="dx-fieldset">
    <div class="dx-field">
        @(Html.DevExtreme().Lookup()
            .ID("lookup")
            .DataSource(Model)
            .DisplayExpr(new JS("lookup_displayExpr"))
            .DropDownOptions(p => p.ShowTitle(false))
            .Placeholder("Select employee")
            .InputAttr("aria-label", "Lookup")
            .OnValueChanged("lookup_valueChanged")
            .ApplyValueMode(EditorApplyValueMode.Instantly)
        )
    </div>
</div>
<div class="selected" display="none">
    <div class="frame">
        <img id="selected-employee-img" src="" alt="">
    </div>
    <div id="selected-employee-notes"></div>
</div>
<div class="options">
    <div class="caption">Options</div>
    <div class="option">
        <div class="label">Apply Value Mode</div>
        @(Html.DevExtreme().SelectBox()
            .Items(new[] { "instantly", "useButtons" })
            .Value("instantly")
            .InputAttr("aria-label", "Apply Value Mode")
            .OnValueChanged("selectBox_valueChanged")
        )
    </div>
</div>

<script>
    function lookup_valueChanged(e) {
        $(".selected").show();
        $("#selected-employee-img").attr("src", e.value.Picture);
        $("#selected-employee-notes").text(e.value.Notes);
    }

    function lookup_displayExpr(item) {
        if(!item) {
            return "";
        }

        return item.FirstName + " " + item.LastName;
    }

    function selectBox_valueChanged(e) {
        const lookup = $("#lookup").dxLookup("instance");
        lookup.option("applyValueMode", e.value);
    }
</script>
