<div id="tabs-demo">
    <div class="widget-container">
        <div class="widget-wrapper">
            @(Html.DevExtreme().Tabs()
                .ID("withText")
                .Width("auto")
                .SelectedIndex(0)
                .DataSource(new JS("tabsText"))
                .StylingMode(TabsStyle.Secondary)
                .IconPosition(TabsIconPosition.Top)
            )

            @(Html.DevExtreme().Tabs()
                .ID("withIconAndText")
                .Width("auto")
                .SelectedIndex(0)
                .DataSource(new JS("tabsTextAndIcon"))
                .StylingMode(TabsStyle.Secondary)
                .IconPosition(TabsIconPosition.Top)
            )

            @(Html.DevExtreme().Tabs()
                .ID("withIcon")
                .Width("auto")
                .SelectedIndex(0)
                .DataSource(new JS("tabsIcon"))
                .StylingMode(TabsStyle.Secondary)
                .IconPosition(TabsIconPosition.Top)
            )
        </div>
    </div>

    <div class="options">
        <div class="caption">Options</div>

        <div class="option">
            <div>Orientation</div>
            @(Html.DevExtreme().SelectBox()
                .DataSource(new[] { "horizontal", "vertical" })
                .InputAttr("aria-label", "Orientation")
                .Value("horizontal")
                .OnValueChanged("orientation_valueChanged")
            )
        </div>

        <div class="option">
            <div>Styling Mode</div>
            @(Html.DevExtreme().SelectBox()
                .DataSource(new[] { "primary", "secondary" })
                .InputAttr("aria-label", "Styling Mode")
                .Value("secondary")
                .OnValueChanged("stylingMode_valueChanged")
            )
        </div>

        <div class="option">
            <div>Icon position</div>
            @(Html.DevExtreme().SelectBox()
                .DataSource(new[] { "top", "start", "end", "bottom" })
                .InputAttr("aria-label", "Icon Position")
                .Value("top")
                .OnValueChanged("iconPosition_valueChanged")
            )
        </div>

        <div class="option">
            @(Html.DevExtreme().CheckBox()
                .ID("show-navigation-buttons")
                .Value(false)
                .Text("Show Navigation Buttons")
                .OnValueChanged("showNavigation_valueChanged")
            )
        </div>

        <div class="option">
            @(Html.DevExtreme().CheckBox()
                .ID("scroll-content")
                .Value(false)
                .Text("Scroll Content")
                .OnValueChanged("scrollContent_valueChanged")
            )
        </div>

        <div class="option">
            @(Html.DevExtreme().CheckBox()
                .Value(false)
                .Text("Full width")
                .OnValueChanged("fullWidth_valueChanged")
            )
        </div>

        <div class="option">
            @(Html.DevExtreme().CheckBox()
                .Value(false)
                .Text("Right-to-left mode")
                .OnValueChanged("rtlEnabled_valueChanged")
            )
        </div>
    </div>
</div>

<script>
    function orientation_valueChanged(e) {
        const $widgetWrapper = $(".widget-wrapper");

        $widgetWrapper.removeClass();
        $widgetWrapper.addClass(`widget-wrapper widget-wrapper-${data.value}`);

        setTabsOption("orientation", e.value);
    }

    function stylingMode_valueChanged(e) {
        setTabsOption("stylingMode", e.value);
    }

    function iconPosition_valueChanged(e) {
        setTabsOption("iconPosition", e.value);
    }

    function showNavigation_valueChanged(e) {
        const scrollContentCheckBox = $("#scroll-content").dxCheckBox("instance");
        const $widgetWrapper = $(".widget-wrapper");
        const shouldRestrictWidth = data.value || scrollContentCheckBox.option("value");

        $widgetWrapper.toggleClass("strict-width", shouldRestrictWidth);

        setTabsOption("showNavButtons", e.value);
    }

    function scrollContent_valueChanged(e) {
        const showNavButtonsCheckBox = $("#show-navigation-buttons").dxCheckBox("instance");
        const $widgetWrapper = $(".widget-wrapper");
        const shouldRestrictWidth = data.value || showNavButtonsCheckBox.option("value");

        $widgetWrapper.toggleClass("strict-width", shouldRestrictWidth);

        setTabsOption("scrollByContent", e.value);
    }

    function fullWidth_valueChanged(e) {
        setTabsOption("width", e.value ? "100%" : "auto");
    }

    function rtlEnabled_valueChanged(e) {
        setTabsOption("rtlEnabled", e.value);
    }

    function setTabsOption(option, value) {
        $("#withText").dxTabs("instance").option(option, value);
        $("#withIconAndText").dxTabs("instance").option(option, value);
        $("#withIcon").dxTabs("instance").option(option, value);
    }

    const tabsText = [
        {
            id: 0,
            text: "User",
        },
        {
            id: 1,
            text: "Analytics",
        },
        {
            id: 2,
            text: "Clients",
        },
        {
            id: 3,
            text: "Orders",
        },
        {
            id: 4,
            text: "Favorites",
        },
        {
            id: 5,
            text: "Search",
        },
    ];

    const tabsTextAndIcon = [
        {
            id: 0,
            text: "User",
            icon: "user",
        },
        {
            id: 1,
            text: "Analytics",
            icon: "chart",
        },
        {
            id: 2,
            text: "Clients",
            icon: "accountbox",
        },
        {
            id: 3,
            text: "Orders",
            icon: "ordersbox",
        },
        {
            id: 4,
            text: "Favorites",
            icon: "bookmark",
        },
        {
            id: 5,
            text: "Search",
            icon: "search",
        },
    ];

    const tabsIcon = [
        {
            id: 0,
            icon: "user",
        },
        {
            id: 1,
            icon: "chart",
        },
        {
            id: 2,
            icon: "accountbox",
        },
        {
            id: 3,
            icon: "ordersbox",
        },
        {
            id: 4,
            icon: "bookmark",
        },
        {
            id: 5,
            icon: "search",
        },
    ];
</script>
