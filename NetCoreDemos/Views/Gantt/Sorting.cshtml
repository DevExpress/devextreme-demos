@using DevExtreme.NETCore.Demos.Models.SampleData
@using Gantt = DevExtreme.NETCore.Demos.Models.Gantt

<div class="widget-container">
    <div class="options">
        <div class="caption">Options</div>
        <div class="option">
            <div class="label">Sorting Mode:</div>
            <div class="value">
                @(Html.DevExtreme().SelectBox()
                    .ID("sortingMode")
                    .DataSource(new[] {
                        "single",
                        "multiple",
                        "none"
                    })
                    .Value("single")
                    .OnValueChanged("ganttSortingMode_valueChanged")
                )
            </div>
        </div>
        <div class="option">
            @(Html.DevExtreme().CheckBox()
            .ID("showSortIndexes")
            .Value(false)
            .Text("Show Sort Indexes")
            .Disabled(true)
            .OnValueChanged("ganttShowSortIndexes_changed")
        )
        </div>
    </div>
    @(Html.DevExtreme().Gantt<Gantt.Task>()
        .ID("gantt")
        .Tasks(t => t
            .DataSource(ds => ds.Array().Data(SampleData.GanttTasks).Key("ID"))
            .KeyExpr("ID")
            .TitleExpr("Title")
            .ParentIdExpr("ParentId")
            .StartExpr("Start")
            .EndExpr("End")
            .ProgressExpr("Progress")
        )
        .Dependencies(d => d
            .DataSource(ds => ds.Array().Data(SampleData.GanttDependencies).Key("ID"))
            .KeyExpr("ID")
            .PredecessorIdExpr("PredecessorId")
            .SuccessorIdExpr("SuccessorId")
            .TypeExpr("Type")
        )
        .Resources(r => r
            .DataSource(ds => ds.Array().Data(SampleData.GanttResources).Key("ID"))
            .KeyExpr("ID")
            .TextExpr("Text")
        )
        .ResourceAssignments(ra => ra
            .DataSource(ds => ds.Array().Data(SampleData.GanttResourceAssignments).Key("ID"))
            .KeyExpr("ID")
            .TaskIdExpr("TaskId")
            .ResourceIdExpr("ResourceId")
        )
        .Editing(e => e.Enabled(true))
        .Columns(columns => {
            columns.AddFor(m => m.Title)
                .Caption("Subject")
                .SortOrder(SortOrder.Asc)
                .Width(300);
            columns.AddFor(m => m.Start)
                .Caption("Start Date");
            columns.AddFor(m => m.End)
                .Caption("End Date");
        })
        .ScaleType(GanttScaleType.Weeks)
        .TaskListWidth(500)
        .Sorting(sorting => sorting.Mode(GanttSortingMode.Single).ShowSortIndexes(false))
    )
</div>

<script>
    function getGanttInstance() {
        return $("#gantt").dxGantt("instance");
    }

    function ganttSortingMode_valueChanged(e) {
        var ganttInstance = getGanttInstance();
        ganttInstance.option("sorting", { mode: e.value });
        var disabled = e.value !== "multiple";
        $("#showSortIndexes").dxCheckBox("instance").option("disabled", disabled);
    }

    function ganttShowSortIndexes_changed(e) {
        var ganttInstance = getGanttInstance();
        ganttInstance.option("sorting", { showSortIndexes: e.value });
    }
</script>
