<div class='demo-container'>
    <div class='button-container'>
        @(Html.DevExtreme().Button()
            .Text("Show Popup")
            .Type(ButtonType.Default)
            .Width(300)
            .OnClick("showScrollablePopup")
        )
        <div class="label"> A native scrollable container </div>
    </div>

    <div class='button-container'>
         @(Html.DevExtreme().Button()
            .Text("Show Popup")
            .Width(300)
            .OnClick("showScrollViewPopup")
        )
        <div class="label"> The ScrollView </div>
    </div>
</div>

@(Html.DevExtreme().Popup()
    .ID("scrollable-popup")
    .Width(500)
    .Height(400)
    .Visible(false)
    .ShowTitle(true)
    .HideOnOutsideClick(true)
    .ContentTemplate(new TemplateName("popup-template"))
    .ToolbarItems(barItems => {
        barItems.Add()
            .Toolbar(Toolbar.Bottom)
            .Location(ToolbarItemLocation.Center)
            .Widget(widget => widget.Button()
                .Text("Print")
                .Type(ButtonType.Default)
                .Width(220)
                .OnClick("hideScrollablePopup")
            );
    })
)

@using (Html.DevExtreme().NamedTemplate("popup-template")) {
    <div>
        <div class='header'>The Popup inner area is divided into three parts:</div>
        
        <div class='caption'>Content area</div>
        To populate the Popup with content, use the <b>contentTemplate</b> property.

        <div class='caption'>Top toolbar</div>
        <div>Set <b>showTitle</b> to <code>true</code> and use the <b>title</b> property to specify the caption. The Close button will appear if you do not disable the <b>showCloseButton</b> property.<br><br>
        Add <b>toolbarItems</b> markup and set each item's <b>toolbar</b> property to <code>top</code>. If you want to display an item in the overflow menu, as shown in this demo, set the item's <b>locateInMenu</b> property to <code>always</code>. You can also assign <code>never</code> to this property to keep the item outside the overflow menu, or you can assign <code>auto</code> to hide the item in the menu if the Popup's width decreases.</div>

        <div class='caption'>Bottom toolbar</div>
        To enable the bottom toolbar, declare the <b>toolbarItems</b> array as shown in this demo. Set each item's <b>toolbar</b> property to <code>bottom</code>. To learn more about toolbar configuration, refer to the following tutorial: <a href="https://js.devexpress.com/Documentation/Guide/UI_Components/Toolbar/Getting_Started_with_Toolbar/" target="_blank">Getting Started with Toolbar</a>
    </div>
}

@(Html.DevExtreme().Popup()
    .ID("popup-with-scrollview")
    .Width(500)
    .Height(400)
    .Visible(false)
    .ShowTitle(true)
    .HideOnOutsideClick(true)
    .ContentTemplate(new TemplateName("popup-with-scrollview-template"))
    .ToolbarItems(barItems => {
        barItems.Add()
            .Toolbar(Toolbar.Bottom)
            .Location(ToolbarItemLocation.Center)
            .Widget(widget => widget.Button()
                .Text("Print")
                .Type(ButtonType.Default)
                .Width(220)
                .OnClick("hideScrollViewPopup")
            );
    })
)

@using (Html.DevExtreme().NamedTemplate("popup-with-scrollview-template")) {
    @(Html.DevExtreme().ScrollView()
        .Width("100%")
        .Height("100%")
        .Content(@<text>
            <img src="../../Content/Images/Popup-Scrolling-Image.jpg" class="center" />
            <div id="textBlock">
                The <b>ScrollView</b> allows users to scroll its content vertically. To enable horizontal and vertical scrolling, set the <b>direction</b> option to <i>&quot;both&quot;</i>. Horizontal scrolling is available only if the content is wider than the <b>ScrollView</b>. Otherwise, the content adapts to the widget&apos;s width.<br /><br />The <b>ScrollView</b> uses native scrolling on most platforms, except desktops. To use it on all platforms, assign <b>true</b> to the <b>useNative</b> option. If you assign <b>false</b>, scrolling is simulated on all platforms.
            </div>
        </text>)
    )
}

<script>
    function showScrollablePopup() {
        $("#scrollable-popup").dxPopup("instance").show();
    }

    function showScrollViewPopup() {
        $("#popup-with-scrollview").dxPopup("instance").show();
    }

    function hideScrollablePopup() {
        $("#scrollable-popup").dxPopup("instance").hide();
    }

    function hideScrollViewPopup() {
        $("#popup-with-scrollview").dxPopup("instance").hide();
    }
</script>
